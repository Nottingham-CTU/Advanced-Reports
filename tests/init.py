# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestInit():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_init(self):
    self.driver.get("http://127.0.0.1/")
    self.driver.find_element(By.LINK_TEXT, "My Projects").click()
    elements = self.driver.find_elements(By.XPATH, "//*[@id=\"table-proj_table\"][contains(.,\'Advanced Reports Test\')]")
    assert len(elements) == 0
    self.driver.find_element(By.CSS_SELECTOR, "a[href*=\"ControlCenter/index.php\"]").click()
    self.driver.find_element(By.CSS_SELECTOR, "a[href*=\"ExternalModules/manager/control_center.php\"]").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.CSS_SELECTOR, "tr[data-module=\"advanced_reports\"] .external-modules-configure-button")))
    self.driver.find_element(By.CSS_SELECTOR, "tr[data-module=\"advanced_reports\"] .external-modules-configure-button").click()
    dropdown = self.driver.find_element(By.NAME, "config-require-user-permission")
    dropdown.find_element(By.CSS_SELECTOR, "*[value='true']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#external-modules-configure-modal button.save").click()
    time.sleep(5)
    self.driver.find_element(By.LINK_TEXT, "New Project").click()
    self.driver.find_element(By.ID, "app_title").send_keys("Advanced Reports Test")
    dropdown = self.driver.find_element(By.ID, "purpose")
    dropdown.find_element(By.XPATH, "//option[. = 'Practice / Just for fun']").click()
    self.driver.find_element(By.ID, "project_template_radio1").click()
    self.driver.find_element(By.CSS_SELECTOR, "input[name=\"copyof\"][value=\"2\"]").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primaryrc").click()
    self.driver.find_element(By.CSS_SELECTOR, "a[href*=\"ExternalModules/manager/project.php\"]").click()
    self.driver.find_element(By.ID, "external-modules-enable-modules-button").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.CSS_SELECTOR, "tr[data-module=\"advanced_reports\"] .enable-button")))
    self.driver.find_element(By.CSS_SELECTOR, "tr[data-module=\"advanced_reports\"] .enable-button").click()
    time.sleep(5)
    elements = self.driver.find_elements(By.CSS_SELECTOR, "#external-modules-enabled tr[data-module=\"advanced_reports\"]")
    assert len(elements) > 0
    self.driver.find_element(By.CSS_SELECTOR, "a[href*=\"UserRights/index.php\"]:not([href*=\"logout=1\"])").click()
    self.driver.find_element(By.ID, "new_username").click()
    self.driver.find_element(By.ID, "new_username").send_keys("user")
    self.driver.find_element(By.ID, "addUserBtn").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.CSS_SELECTOR, "[aria-describedby=\"editUserPopup\"]")))
    element = self.driver.find_element(By.CSS_SELECTOR, "input[name=\"external_module_config[]\"][value=\"advanced_reports\"]")
    if element.is_selected() != True: element.click()
    element = self.driver.find_element(By.CSS_SELECTOR, "[aria-describedby=\"editUserPopup\"] input[name=\"notify_email\"]")
    if element.is_selected: element.click()
    self.driver.find_element(By.CSS_SELECTOR, "button[style*=\"font-weight: bold\"]").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.XPATH, "//table[@id=\"table-user_rights_roles_table\"][contains(.,\'user\')]")))
    self.driver.find_element(By.ID, "new_username").click()
    self.driver.find_element(By.ID, "new_username").send_keys("user2")
    self.driver.find_element(By.ID, "addUserBtn").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.CSS_SELECTOR, "[aria-describedby=\"editUserPopup\"]")))
    element = self.driver.find_element(By.CSS_SELECTOR, "[aria-describedby=\"editUserPopup\"] input[name=\"notify_email\"]")
    if element.is_selected: element.click()
    self.driver.find_element(By.CSS_SELECTOR, "button[style*=\"font-weight: bold\"]").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.XPATH, "//table[@id=\"table-user_rights_roles_table\"][contains(.,\'user2\')]")))
    for i in range(0, 2):
      self.driver.find_element(By.CSS_SELECTOR, "a[href*=\"DataEntry/record_status_dashboard.php\"]:not([href*=\"logout=1\"])").click()
      self.driver.find_element(By.CSS_SELECTOR, "button.btn-rcgreen[onclick*=\"record_home.php\"]").click()
      self.driver.execute_script("sessionStorage.setItem(\'thisurl\',window.location.href.replace(\'&auto=1\',\'\'))")
      while self.driver.execute_script("return ($(\'a img[src*=\"gray\"]\').length > 0)"):
        self.driver.find_element(By.CSS_SELECTOR, "a:has(img[src*=\"gray\"])").click()
        WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.ID, "auto-fill-btn")))
        self.driver.find_element(By.ID, "auto-fill-btn").click()
        self.driver.execute_script("$(\'[name=\"date_enrolled\"]\').val(new Date(new Date().getTime() + 500000000).toISOString().slice(0,10));$(\'[name=\"date_visit_4\"]\').val(new Date(new Date().getTime() + 2000000000).toISOString().slice(0,10));$(\'[name=\"discharge_date_4\"]\').val(new Date(new Date().getTime() + 5000000000).toISOString().slice(0,10))")
        self.driver.execute_script("$(\'#south\').remove()")
        self.driver.find_element(By.CSS_SELECTOR, "[name=\"submit-btn-saverecord\"]").click()
        WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.ID, "south")))
        self.driver.execute_script("$(\'#south\').remove()")
        self.driver.execute_script("window.location.href = sessionStorage.getItem(\'thisurl\')")
        WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.ID, "south")))
      self.driver.execute_script("sessionStorage.removeItem(\'thisurl\')")
  
